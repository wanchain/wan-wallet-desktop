const en_US = {
    'Common.activity': 'ACTIVITY',
    'Common.history': 'History',
    'Common.action': 'ACTION',
    'Common.account': 'ACCOUNT',
    'Common.failed': 'Failed',
    'Common.continue': 'Continue',
    'Common.warning': 'WARNING',
    'Common.copy': 'Copy',
    'Common.QRCode': 'QR Code',
    'Common.delete': 'Delete',
    'Common.exportKey': 'Export Private Key',
    'Common.privateKey': 'Reveal Private Key',
    'Common.yourPrivateKey': 'Your Private Key',
    'Common.from': 'From',
    'Common.days': ' days',
    'Common.amount': 'Amount',
    'Common.send': 'Send',
    'Common.disable': 'Disable',
    'Common.enable': 'Enable',
    'Common.off': 'OFF',
    'Common.on': 'ON',
    'Common.tokens': 'Tokens',
    'Common.crossChain': 'Cross Chain',
    'Common.invalidAmount': 'Invalid amount',
    'Common.tokenAddr': 'TOKEN ADDRESS',
    'Common.wanchain': 'Wanchain',
    'Common.ethereum': 'Ethereum',
    'Common.bitcoin': 'Bitcoin',
    'Common.eos': 'EOS',
    'Common.xrpl': 'XRPL',
    'Common.xrp ledger': 'XRPL',
    'Common.bsc': 'BSC',
    'Common.options': 'Options',
    'Common.ok': 'OK',
    'Common.cancel': 'Cancel',
    'Common.save': 'Save',
    'Common.next': 'Next',
    'Common.create': 'Create',
    'Common.balance': 'Balance',
    'Common.sendFailed': 'Network is not stable. Please try again',
    'Common.sendFailedForInsufficientFunds': 'Failed to send transaction. Please make sure you have sufficient balance.',
    'Common.networkError': 'Network error. Please reboot wallet',
    'Common.eosTokens': 'EOS Tokens',
    'Common.convert': 'Convert',
    'Common.storeman': 'Storeman',
    'Common.storemanGroup': 'Storeman Group',
    'Common.chain': 'Chain',
    'Common.amountTooLow': 'Minimum amount should be { minAmount } WAN',
    'Common.availableBalance': 'Available Balance is {availableBalance}',

    'Xrp.destinationTag': 'Destination Tag',
    'Xrp.notExistAccount': 'The destination account does not exist so you must send a minimum of { minReserveXrp } XRP',
    'Xrp.minAmount': 'You must keep at least { minReserveXrp } XRP in this address to meet the mininum reserve requirement.',

    'Layout.connecting': 'connecting to server',
    'Layout.connected': 'connected to server',
    'Layout.initSDKFailed': 'failed to connect to server',
    'Layout.initSuccess': 'succeeded',
    'Layout.initFailed': 'failed',

    'Send.transSuccess': 'Transaction sent successfully',
    'Login.login': 'LOG IN',
    'Login.wrongPassword': 'Wrong Password',
    'Login.inputPassword': 'Input Password',
    'Login.restore': 'Forgot your password? Restore from seed phrase to reset it',

    'Loading.tips': 'Please wait while the wallet loads',
    'Loading.transData': 'Loading',

    'Register.createPassword': 'Create Password',
    'Register.secretBackupPhrase': 'Backup Seed Phrase',
    'Register.confirmSecretBackupPhrase': 'Confirm Seed Phrase',
    'Register.createSeedPhraseFailed': 'Seed phrase creation failed',
    'Register.passwordTip': 'Password must have a minimum of 6 characters; must contain at least one uppercase letter, one lowercase letter, and one numeric digit',
    'Register.passwordsMismatched': 'Passwords don\'t match',
    'Register.passwordsEmpty': 'Please enter the password',
    'Register.seedPhraseIsInvalid': 'Seed phrase is invalid',
    'Register.writeSeedPhraseToDatabaseFailed': 'Failed to write seed phrase to database',
    'Register.unlockWalletFailed': 'Failed to unlock wallet',
    'Register.seedPhraseMismatched': 'Seed phrase not entered correctly',
    'Register.previous': 'Previous',
    'Register.done': 'Done',
    'Register.createFirstAddr': 'An error occurred, please try again',

    'Backup.invalidPassword': 'Invalid password. Try again',
    'Backup.copySuccessfully': 'Copied successfully',
    'Backup.revealSeedPhrase': 'Reveal Seed Phrase',
    'Backup.saveSeedPhraseNotice': 'If you install a new wallet, you will need this seed phrase to access your assets. Save them somewhere safe and secret.',
    'Backup.continue': 'Continue',
    'Backup.seedPhrase': 'Reveal Seed Phrase',
    'Backup.doNotShare': 'DO NOT share your seed phrase with anybody, or else risk losing all your assets.',
    'Backup.yourSeedPhrase': 'Your Seed Phrase',
    'Backup.copyToClipboard': 'Copy to clipboard',
    'Backup.enterPassword': 'Enter Password',

    'Private.doNotShare': 'DO NOT share the private key with anybody. Otherwise all of your assets will be lost.',

    'Ledger.ledger': 'Ledger',
    'Ledger.followInstructionsToConnectLedgerWallet': 'Please follow the instructions below to connect your Ledger wallet',
    'Ledger.connectLedgerWalletToComputer': 'Connect your Ledger wallet directly to your computer',
    'Ledger.enterPinCode': 'Enter PIN code to unlock your Ledger wallet',
    'Ledger.navigateToWanchainAPPAndEnterIntoIt': 'Navigate to Wanchain APP and enter into it',
    'Ledger.signTransactionInLedger': 'Please confirm in Ledger',
    'Ledger.signTransactionFailed': 'Failed to sign transaction. Please try again',
    'Ledger.setContractDataOn': 'Make sure Contract Data is on in Wanchain APP setting',

    'Portfolio.portfolio': 'Portfolio',
    'Portfolio.name': 'NAME',
    'Portfolio.chain': 'CHAIN',
    'Portfolio.price': 'PRICE',
    'Portfolio.balance': 'BALANCE',
    'Portfolio.value': 'VALUE',
    'Portfolio.portfolioUppercase': 'PORTFOLIO',

    'Network.title': 'Network Diagnosis',
    'Network.desc': 'Here you can diagnose network status between your wallet and remote server/blockchain nodes',
    'Network.startButton': 'Start',

    'ImportPrivateKey.title': 'Import Account',
    'ImportPrivateKey.ImportPrivateKeyNotice': 'Import account using private key',
    'ImportPrivateKey.notify': 'Imported accounts will not be associated with your Wanchain Wallet account seed phrase. Make certain to back up the keystore files of all imported accounts in addition to your seed phrase to prevent loss of assets',
    'ImportPrivateKey.enterPrivateKey': 'Enter Private Key',
    'ImportPrivateKey.invalidParameter': 'Invalid parameter',
    'ImportPrivateKey.importPKFailed': 'Private key import failed',
    'ImportPrivateKey.importPKSuccess': 'Private key imported successfully',
    'ImportPrivateKey.sameAddress': 'This address or key pair has already been imported.',

    'ImportPrivateKeyForm.isInvalid': 'Invalid private key',
    'ImportPrivateKeyForm.invalidFormData': 'Invalid form data',

    'ImportPrivateKeyConfirmation.warningText': 'Imported accounts will not be associated with your originally created Wanchain Wallet account seed phrase. Please backup it individually.',
    'ImportPrivateKeyConfirmation.seconds': 'Seconds',
    'ImportPrivateKeyConfirmation.second': 'Second',

    'Restore.restoreFromSeedPhrase': 'Restore From Seed Phrase',
    'Restore.restoreNewWalletWillDeleteAllLocalData': 'If you restore a new wallet from your seed phrase, all local data of the current wallet will be deleted and the application will be rebooted. Please confirm and continue.',
    'Restore.allLocalDataWillBeLost': 'All local data will be lost, including current seed phrase, transaction history, imported addresses and so on. Are you sure you want to continue?',

    'Settings.settings': 'Settings',
    'Settings.config': 'Config',
    'Settings.backup': 'Backup',
    'Settings.restore': 'Restore',
    'Settings.network': 'Network',
    'Settings.addressBook': 'Contacts',
    'Settings.import': 'Import',
    'Settings.application': '√êApps',

    'AddressBook.title': 'Contacts',
    'AddressBook.normalAddrTab': 'Normal Address',
    'AddressBook.privateAddrTab': 'Private Address',
    'AddressBook.addContact': 'Add contact',
    'AddressBook.addContactTitle': 'New Contact',
    'AddressBook.username': 'Username',
    'AddressBook.addNicknamePlaceHolder': 'Add a nickname',
    'AddressBook.address': 'Address',
    'AddressBook.addAddressPlaceHolder': 'Type your address',
    'AddressBook.chain': 'Chain',
    'AddressBook.addChainPlaceHolder': 'Please select a chain',
    'AddressBook.saveContact': 'Save Contact',
    'AddressBook.nickname': 'Nickname',
    'AddressBook.addNickname': 'Add a nickname',
    'AddressBook.wanNameRepeat': 'Nickname occupied',
    'AddressBook.wanChooseChain': 'Please select the chain first',
    'AddressBook.wanAddrEmpty': 'The address cannot be empty',
    'AddressBook.wanAddrAdded': 'Address added',

    'DApp.title': 'DApp Management',
    'DApp.addButton': 'Add',
    'DApp.addedButton': 'Added',
    'DApp.delButton': 'Delete',
    'DApp.chainCol': 'CHAIN',
    'DApp.nameCol': 'NAME',
    'DApp.addressCol': 'ADDRESS',
    'DApp.enableCol': 'Enable',
    'DApp.titleCol': 'Name',
    'DApp.urlCol': 'URL',
    'DApp.commitCol': 'Description',
    'DApp.operation': 'Operation',
    'DApp.addressBook': 'Contacts',
    'DApp.addTitle': 'Add Custom DApp',
    'DApp.addIcon': 'ICON',
    'DApp.commitPlaceholder': 'Custom description information can be added',
    'DApp.namePlaceholder': 'Please input DApp\'s name',
    'DApp.urlPlaceholder': 'Please input DApp\'s URL with a https:// prefix',
    'DApp.termOfServiceTitle': 'Terms of Service',
    'DApp.termOfService1': '1) Wanchain Wallet DApp Store ("we") provides an interface to Smart Contracts on the Wanchain blockchain, which accepts WAN tokens or WRC-20 tokens and transfers varying amounts of WAN or WRC-20 tokens in return, depending on external factors.',
    'DApp.termOfService2': '2) We are not able to verify the legality of this service in each jurisdiction and provide you with any legal advice. It is your sole responsibility to comply with any relevant laws, policies and regulations of your jurisdiction regarding the use of WAN and WRC-20 tokens in the way described above.',
    'DApp.termOfService3': '3) Using Wanchain Wallet DApps can lead to gain or loss of WAN or WRC-20 tokens. We do not hold any responsibility for the results of the games we provide.',
    'DApp.termOfService4': '4) We reserve the right to modify the Wanchain Wallet and its services and these terms without any prior notice. We advise you to check for updates on a regular basis. ',
    'DApp.termOfServiceAgree': 'I understand and agree to the terms',
    'DApp.addFailed': 'Do not add twice',
    'DApp.addSuccess': 'Added DApp successfully',
    'DApp.dAppMarket': '√êApp Store',
    'DApp.allCategories': 'All Categories',
    'DApp.sortByName': 'Sort By Name',
    'DApp.sortByDate': 'Sort By Date',
    'DApp.dAppSearch': 'Type a name',
    'DApp.dAppDetail': 'Details',
    'DApp.poweredBy': 'Powered by ',
    'DApp.infoClose': 'Close',
    'DApp.scAddress': 'Smart Contract Address: ',
    'DApp.moreDApp': 'More √êApps',
    'DApp.DAppInfo': '√êApp Information',
    'DApp.High-risk': 'High-risk',
    'DApp.Game': 'Game',
    'DApp.Gambling': 'Gambling',
    'DApp.Exchange': 'Exchange',
    'DApp.Finance': 'Finance',
    'DApp.Social': 'Social',
    'DApp.Art': 'Art',
    'DApp.Tools': 'Tools',
    'DApp.Website': 'Website',
    'DApp.Creator': 'Creator',

    'Config.option': 'Security Options',
    'Config.inputPwd': 'Input password again while sending transaction',
    'Config.pwdConfirm': 'Password Confirm',
    'Config.loginTimeout': 'Auto-Logout Timer',
    'Config.selectLoginTimeout': 'Set auto-logout time',
    'Config.disableTimeout': 'Disable',
    'Config.fiveMinutes': '5 minutes',
    'Config.tenMinutes': '10 minutes',
    'Config.fifteenMinutes': '15 minutes',
    'Config.thirtyMinutes': '30 minutes',
    'Config.oneHour': '1 hour',
    'Config.twoHours': '2 hours',
    'Config.addToken': 'Add Token',
    'Config.checkTokenAddr': 'Token Address is invalid',
    'Config.addTokenAddrErr': 'Failed to add token, Please try again!',
    'Config.deleteTokenAddrErr': 'Failed to delete token',
    'Config.existedTokenAddr': 'Existing token address',
    'Config.invalidPassword': 'Invalid password. Try again',
    'Config.crossChain': 'Cross Chain Options',
    'Config.wallet': 'Wallet Options',
    'Config.deleteConfirm': 'Deletion Confirmation',
    'Config.confirmText': 'Confirm to delete: ',
    'Config.enableEosToken': 'Enable EOS tokens',
    'Config.selectWanPath': 'Set wanchain address path',
    'Config.wanLegacyPath': 'Wanchain legacy path',
    'Config.ethCompatiblePath': 'Ethereum compatible path',

    'PasswordConfirmForm.password': 'Password',
    'PasswordConfirmForm.inputPwd': 'Input password',
    'PasswordConfirmForm.pwdMessage': 'Please input your Password!',

    'Sidebar.wanchain': 'Wanchain',
    'Sidebar.moreTokens': 'More Tokens',

    'Trezor.trezor': 'Trezor',
    'Trezor.installBridge': 'Install Trezor Bridge from trezor.io',
    'Trezor.connectTrezorWalletToComputer': 'Connect your Trezor wallet directly to your computer',
    'Trezor.signTransactionFailed': 'Failed to sign transaction. Please try again',
    'Trezor.signFailed': 'Sign failed',

    'WanAccount.wallet': 'Wallet',
    'WanAccount.name': 'NAME',
    'WanAccount.address': 'ADDRESS',
    'WanAccount.balance': 'BALANCE',
    'WanAccount.action': 'ACTION',
    'WanAccount.livePrivateBalance': 'Live Private Balances',
    'WanAccount.blank': ' ',
    'WanAccount.sendTransactionFailed': 'Failed to send transaction. Please try again',
    'WanAccount.sendBatchTransactionFailed': 'Some transactions sending failed. Please check the private history',
    'WanAccount.sendTransactionSuccessFully': 'Transaction sent successfully',
    'WanAccount.wanchain': 'Wanchain',
    'WanAccount.wan': 'WAN',
    'WanAccount.notSameName': 'Duplicate account names not allowed',
    'WanAccount.redeem': 'Redeem',
    'WanAccount.privateTxReceiverAddress': 'Private transaction receiver address',
    'WanAccount.publicKey': 'Public Key',
    'WanAccount.createAccountFailed': 'Account creation failed',
    'WanAccount.createAccountSuccess': 'Created account successfully',
    'WanAccount.newAddressExistInImportedList': 'The new address below will be created, but there is the same address has been imported.Please delete the imported address before create new address.',

    'EosAccount.name': 'NAME',
    'EosAccount.publicKey': 'PUBLIC KEY',
    'EosAccount.account': 'ACCOUNT',
    'EosAccount.ramAvailable': 'AVAIL RAM (KB)',
    'EosAccount.cpuAvailable': 'AVAIL CPU (ms)',
    'EosAccount.netAvailable': 'AVAIL NET (KB)',
    'EosAccount.balance': 'BALANCE',
    'EosAccount.action': 'ACTION',
    'EosAccount.Accounts': 'Accounts',
    'EosAccount.keyPair': 'Key Pairs',
    'EosAccount.createKeyPairFailed': 'Key pair creation failed',
    'EosAccount.createKeyPairSuccess': 'Created key pair successfully',

    'EOSKeyPairList.import': 'Import',
    'EOSKeyPairList.getAccountListFailed': 'Faild to get account list',
    'EOSKeyPairList.noAccountFound': 'No account available',
    'EOSKeyPairList.invalidFormData': 'Invalid form data',
    'EOSKeyPairList.updateAccountInfoFailed': 'Account information update failed',
    'EOSKeyPairList.importAccount': 'Import Account',
    'EOSKeyPairList.publicKey': 'Public Key',
    'EOSKeyPairList.searchPublicKey': 'Searched Public Key',
    'EOSKeyPairList.selectOneAccount': 'Please select at least one account',
    'EOSKeyPairList.tipText': `If you have never associated EOS accounts to EOS key pairs created by Wan Wallet, you can use third party service to create account and associate it to key pairs. If you already have EOS accounts associated to key pairs, you can create new EOS accounts using existing ones.`,
    'EOSKeyPairList.getImportedAccountsFailed': 'Failed to get imported accounts',
    'EOSKeyPairList.getAccountsFailed': 'Failed to get accounts',

    'EOSAccountList.manageResource': 'Manage',
    'EOSAccountList.getResourcePriceFailed': 'Failed to get resource price',
    'EOSAccountList.eosResourceManagement': 'Resource Management',
    'EOSAccountList.noSufficientBalance': 'Insufficient balance',

    'EOSResourceManageForm.tooSmallSize': 'Value too small',
    'EOSResourceManageForm.invalidSize': 'Invalid value',
    'EOSResourceManageForm.noSufficientBalance': 'Insufficient balance',
    'EOSResourceManageForm.oversizeRAM': 'RAM exceeds maximum value',
    'EOSResourceManageForm.oversizeEOS': 'EOS exceeds maximum value',
    'EOSResourceManageForm.noSufficientRAM': 'Insufficient RAM to sell',
    'EOSResourceManageForm.txSentSuccess': 'Transaction sent successfully',
    'EOSResourceManageForm.txSentFailed': 'Failed to send transaction',
    'EOSResourceManageForm.available': 'Available',
    'EOSResourceManageForm.allNetwork': 'All Network',
    'EOSResourceManageForm.currentRAMPrice': 'Current RAM Price',
    'EOSResourceManageForm.sell': 'SELL',
    'EOSResourceManageForm.sellRAM': 'SELL RAM',
    'EOSResourceManageForm.buy': 'BUY',
    'EOSResourceManageForm.buyRAM': 'BUY RAM',
    'EOSResourceManageForm.selectReceivingAccount': 'SELECT RECEIVER ACCOUNT',
    'EOSResourceManageForm.selectHolderAccount': 'SELECT HOLDER ACCOUNT',
    'EOSResourceManageForm.enterRAMSize': 'Enter RAM size (KB)',
    'EOSResourceManageForm.oversizeCPU': 'Over the maximum size of CPU',
    'EOSResourceManageForm.noSufficientEOSToStake': 'Insufficient EOS to stake',
    'EOSResourceManageForm.noSufficientCPUtoUnstake': 'Insufficient CPU to unstake',
    'EOSResourceManageForm.currentCPUPrice': 'Current CPU Price',
    'EOSResourceManageForm.stake': 'STAKE',
    'EOSResourceManageForm.stakeCPU': 'STAKE CPU',
    'EOSResourceManageForm.stakeNet': 'STAKE NET',
    'EOSResourceManageForm.unstake': 'UNSTAKE',
    'EOSResourceManageForm.unstakeCPU': 'UNSTAKE CPU',
    'EOSResourceManageForm.unstakeNET': 'UNSTAKE NET',
    'EOSResourceManageForm.oversizeNET': 'NET exceeds maximum value',
    'EOSResourceManageForm.noSufficientNetToUnstake': 'Insufficient NET to unstake',
    'EOSResourceManageForm.currentNetPrice': 'Current NET Price',
    'EOSResourceManageForm.enterEOSAmount': 'Enter EOS amount',
    'EOSResourceManageForm.confirm': 'Confirm Transaction',
    'EOSResourceManageForm.account': 'Account',
    'EOSResourceManageForm.amount': 'Amount',
    'EOSResourceManageForm.type': 'Type',
    'EOSResourceManageForm.accountName': 'Account Name',

    'EOSTransHistory.time': 'TIME',
    'EOSTransHistory.from': 'FROM',
    'EOSTransHistory.to': 'TO',
    'EOSTransHistory.amount': 'AMOUNT',
    'EOSTransHistory.status': 'STATUS',
    'EOSTransHistory.resource': 'RESOURCE',
    'EOSTransHistory.resourceTip': 'Show resource manager transactions',
    'EOSTransHistory.action': 'ACTION',
    'EOSTransHistory.selectAccount': 'Select an account name',
    'EOSTransHistory.normal': 'NORMAL',
    'EOSTransHistory.normalTip': 'Show normal transactions',
    'EOSTransHistory.buyRAM': 'BUY RAM',
    'EOSTransHistory.sellRAM': 'SELL RAM',
    'EOSTransHistory.newAccount': 'New Account',
    'EOSTransHistory.stakeBandwidth': 'Stake Bandwidth',
    'EOSTransHistory.unstakeBandwidth': 'Unstake Bandwidth',

    'EOSCreateAccountForm.getResourcePriceFailed': 'Failed to get resource price',
    'EOSCreateAccountForm.duplicateAccount': 'Duplicate account name',
    'EOSCreateAccountForm.createAccountFailed': 'Failed to create account',
    'EOSCreateAccountForm.createAccountSuccess': 'Created account successfully',
    'EOSCreateAccountForm.invalidValue': 'Invalid value',
    'EOSCreateAccountForm.invalidNameFormat': 'Start with a-z; Only a-z, 1-5 and dot are allowed; Only 12 characters are allowed',
    'EOSCreateAccountForm.createAccount': 'Create Account',
    'EOSCreateAccountForm.newAccountName': 'New Account Name',
    'EOSCreateAccountForm.name': 'Enter 12 characters',
    'EOSCreateAccountForm.creator': 'Creator',
    'EOSCreateAccountForm.accountToFundAccount': 'Select an account',
    'EOSCreateAccountForm.ownerPublicKey': 'Owner Public Key',
    'EOSCreateAccountForm.ownerKey': 'Select a public key',
    'EOSCreateAccountForm.activePublicKey': 'Active Public Key',
    'EOSCreateAccountForm.activeKey': 'Select a public key',
    'EOSCreateAccountForm.atLeast3KB': 'Invalid value, at least 3KB',
    'EOSCreateAccountForm.isExistEosName': 'EOS account name already exists',
    'EOSCreateAccountForm.invalidEosPublicKey': 'Invalid EOS public key',
    'EOSCreateAccountForm.errorOccurred': 'An error occurred when validating form data',
    'EOSCreateAccountForm.validateNameFailed': 'Validate account name failed',

    'EOSNormalTransForm.sendTxFailed': 'Failed to send transaction',
    'EOSNormalTransForm.sendTxSuccess': 'Send transaction successfully',
    'EOSNormalTransForm.invalidAccountName': 'Invalid account name',
    'EOSNormalTransForm.invalid': 'Invalid',
    'EOSNormalTransForm.recipientAccount': 'Recipient Account',
    'EOSNormalTransForm.memo': 'Memo',
    'EOSNormalTransForm.invalidMemo': 'Invalid memo',

    'AdvancedOptionForm.advancedOptions': 'Advanced Options',
    'AdvancedOptionForm.save': 'Save',
    'AdvancedOptionForm.gasPrice': 'Gas Price',
    'AdvancedOptionForm.gwin': 'Gwin',
    'AdvancedOptionForm.gasPriceIsIncorrect': 'Gas price is incorrect',
    'AdvancedOptionForm.gasLimit': 'Gas Limit',
    'AdvancedOptionForm.gasLimitIsIncorrect': 'Gas limit is incorrect',
    'AdvancedOptionForm.nonce': 'Nonce',
    'AdvancedOptionForm.nonceIsIncorrect': 'Nonce is incorrect',
    'AdvancedOptionForm.inputData': 'Input Data',
    'AdvancedOptionForm.inputDataIsIncorrect': 'Input data is incorrect',
    'AdvancedOptionForm.feeRate': 'Fee Rate',
    'AdvancedOptionForm.feeRateIsIncorrect': 'Fee rate is incorrect',

    'CopyAndQrcode.copySuccessfully': 'Copied successfully',
    'CopyAndQrcode.privateKey': 'Private Key',
    'CopyAndQrcode.confirmText': 'Are you sure you want to delete?',
    'CopyAndQrcode.deleteFailedText': 'Account deletion failed',
    'CopyAndQrcode.deleteSuccessfulText': 'Account deleted',

    'MoreTokens.tokenList': 'Token List',

    'HwWallet.Accounts.name': 'NAME',
    'HwWallet.Accounts.address': 'ADDRESS',
    'HwWallet.Accounts.balance': 'BALANCE',
    'HwWallet.Accounts.action': 'ACTION',
    'HwWallet.Accounts.sendTransactionFailed': 'Failed to send transaction. Please try again',

    'HwWallet.Connect.address': 'Address',
    'HwWallet.Connect.balance': 'Balance',
    'HwWallet.Connect.connectFailed': 'Failed to connect',
    'HwWallet.Connect.connectAHardwareWallet': 'Connect a Hardware Wallet',
    'HwWallet.Connect.continue': 'Continue',
    'HwWallet.Connect.selectAddress': 'Select Address',
    'HwWallet.Connect.previousAddresses': 'Previous addresses',
    'HwWallet.Connect.nextAddresses': 'Next addresses',
    'HwWallet.disconnected': 'Hardware wallet is disconnected',

    'MFooter.allRightsReserved': 'All Rights Reserved',
    'MFooter.wanchainFoundationLtd': 'WANCHAIN FOUNDATION LTD',

    'MHeader.logout': 'Log Out',
    'MHeader.disconnect': 'Disconnect',

    'Mnemonic.ConfirmPhrase.confirmYourSeedPhrase': 'Confirm Your Seed Phrase',

    'Mnemonic.InputPwd.createAWANWallet': 'Create a WAN Wallet',
    'Mnemonic.InputPwd.newPassword': 'New Password',
    'Mnemonic.InputPwd.enterPassword': 'Enter Password',
    'Mnemonic.InputPwd.confirmPassword': 'Confirm Password',
    'Mnemonic.InputPwd.createPhrase': 'Create Phrase',
    'Mnemonic.InputPwd.importPhrase': 'Import Phrase',

    'Mnemonic.ShowPhrase.importYourSeedPhrase': 'Import Your Seed Phrase',
    'Mnemonic.ShowPhrase.enterSeedPhraseHereAndSeparateEachWordWithSingleSpace': 'Enter your seed phrase here and separate each word with a single space',
    'Mnemonic.ShowPhrase.backupYourSeedPhrase': 'Backup Your Seed Phrase',
    'Mnemonic.ShowPhrase.warning': 'WARNING',
    'Mnemonic.ShowPhrase.doNotShareThisSeedPhraseWithAnybody': 'DO NOT share this seed phrase with anybody. Otherwise all of your assets will be lost.',
    'Mnemonic.ShowPhrase.tips': 'Tips',
    'Mnemonic.ShowPhrase.writeSeedPhraseOnPaperAndStoreInSecurePlace': 'Write this seed phrase on a piece of paper and store in a secure place',

    'NormalTransForm.ConfirmForm.transactionConfirm': 'Confirm Transaction',
    'NormalTransForm.ConfirmForm.to': 'To',
    'NormalTransForm.ConfirmForm.gasPrice': 'Gas Price',
    'NormalTransForm.ConfirmForm.gwin': 'Gwin',
    'NormalTransForm.ConfirmForm.gasLimit': 'Gas Limit',
    'NormalTransForm.ConfirmForm.nonce': 'Nonce',
    'NormalTransForm.ConfirmForm.fee': 'Fee',
    'NormalTransForm.ConfirmForm.inputData': 'Input Data',
    'NormalTransForm.ConfirmForm.faceValue': 'Face Value',
    'NormalTransForm.ConfirmForm.count': 'Count',
    'NormalTransForm.estimateGasFailed': 'Failed to estimate gas. Please try again',
    'NormalTransForm.invalidAddress': 'Invalid address',
    'NormalTransForm.shouldBe10Times': 'The amount should be divisible by 10',
    'NormalTransForm.invalidFeeRate': 'Invalid fee rate',
    'NormalTransForm.invalidPrivateAddress': 'Invalid private address',
    'NormalTransForm.transaction': 'Transaction',
    'NormalTransForm.mode': 'Transaction Mode',
    'NormalTransForm.normalTransaction': 'Normal Transaction',
    'NormalTransForm.privateTransaction': 'Private Transaction',
    'NormalTransForm.senderAddress': 'Sender Address',
    'NormalTransForm.to': 'To',
    'NormalTransForm.transferTo': 'Token Transfer To',
    'NormalTransForm.addressIsIncorrect': 'Address is incorrect',
    'NormalTransForm.privateAddressIsIncorrect': 'Private address is incorrect',
    'NormalTransForm.recipientAddress': 'Recipient Address',
    'NormalTransForm.token': 'Token Amount',
    'NormalTransForm.recipientPrivateAddress': 'Recipient Private Address',
    'NormalTransForm.chooseValue': 'Choose Value',
    'NormalTransForm.amountIsIncorrect': 'Amount is incorrect',
    'NormalTransForm.fee': 'Fee',
    'NormalTransForm.pleaseSelectTransactionFee': 'Please select transaction fee',
    'NormalTransForm.slow': 'Slow',
    'NormalTransForm.average': 'Average',
    'NormalTransForm.fast': 'Fast',
    'NormalTransForm.wan': 'WAN',
    'NormalTransForm.advancedOptions': 'Advanced Options',
    'NormalTransForm.overBalance': 'The cost exceeds the balance. Please try again',
    'NormalTransForm.sendAll': 'Send Everything',
    'NormalTransForm.password': 'Password',
    'NormalTransForm.pwdIsIncorrect': 'Password is incorrect',
    'NormalTransForm.destinationTagRule': 'Destination tag is incorrect',
    'NormalTransForm.isNativeBtcAddress': 'It is not allowed to send to yourself.',
    'NormalTransForm.inputToAddress': 'Please enter recipient address',
    'NormalTransForm.addNewContacts': 'New address detected! Click here to add to your address book.',
    'NormalTransForm.insufficientFee': 'Insufficient transaction fees, please check balance',

    'CrossChainTransForm.ConfirmForm.transactionConfirm': 'Confirm Cross Chain Transaction',
    'CrossChainTransForm.capacity': 'Capacity',
    'CrossChainTransForm.quota': 'Capacity Left',
    'CrossChainTransForm.txFeeRatio': 'Fee Ratio',
    'CrossChainTransForm.estimateFee': 'Estimated Fee',
    'CrossChainTransForm.gasFee': 'Gas Fee',
    'CrossChainTransForm.userNetworkFee': 'User Network Fee',
    'CrossChainTransForm.crossChainNetworkFee': 'Cross-chain Network Fee',
    'CrossChainTransForm.operationFee': 'Operation Fee',
    'CrossChainTransForm.networkFee': 'Network Fee',
    'CrossChainTransForm.crosschainFee': 'Bridge Fee',
    'CrossChainTransForm.transactionFee': 'Transaction Fee',
    'CrossChainTransForm.overBalance': 'The cost exceeds the balance. Please check the balance on both original and destination chain',
    'CrossChainTransForm.overOriginalBalance': 'The cost exceeds the balance. Please check the balance',
    'CrossChainTransForm.originNoBalance': 'There is no balance on original chain',
    'CrossChainTransForm.overTransBalance': 'Insufficient balance',
    'CrossChainTransForm.transInfo': 'Cross Chain Transaction Information',
    'CrossChainTransForm.invalidAmount': 'Please input amount equal to or greater than ',
    'CrossChainTransForm.invalidAmount1': 'Please input amount greater than ',
    'CrossChainTransForm.overQuota': 'The amount is greater than the remaining capacity of the storeman',
    'CrossChainTransForm.HashX': 'HashX',
    'CrossChainTransForm.To': 'To',
    'CrossChainTransForm.ApproveTxHash': 'Approve Hash',
    'CrossChainTransForm.LockTxHash': 'Lock Hash',
    'CrossChainTransForm.NoticeTxHash': 'Notice Hash',
    'CrossChainTransForm.ConfirmTxHash': 'Confirm Hash',
    'CrossChainTransForm.CancelTxHash': 'Cancel Hash',
    'CrossChainTransForm.Value': 'Value',
    'CrossChainTransForm.Secret': 'Secret',
    'CrossChainTransForm.Status': 'Status',
    'CrossChainTransForm.Date': 'Date',
    'CrossChainTransForm.crossType': 'Cross Type',
    'CrossChainTransForm.FAST': 'Rapid Mode',
    'CrossChainTransForm.HTLC': 'Secure Mode',
    'CrossChainTransForm.UnderFastMinimum': 'The minimum amount is',
    'CrossChainTransForm.getOperationFeeFailed': 'Failed to get operation fee',
    'CrossChainTransForm.getQuotaFailed': 'Failed to get quota',
    'CrossChainTransForm.getNetworkFeeFailed': 'Failed to get network fee',
    'CrossChainTransForm.youWillReceive': 'You will receive',
    'CrossChainTransForm.received': 'Received',

    'CrossChain.selectFailed': 'Failed to update selection status',

    'RedeemFromPrivate.noSufficientFunds': 'No sufficient funds',
    'RedeemFromPrivate.getPrivateTxInfoFailed': 'Failed to get private transaction information',
    'RedeemFromPrivateForm.redeem': 'Redeem',
    'RedeemFromPrivateForm.PrivateAddresses': 'Private Addresses',
    'RedeemFromPrivateForm.PrivateAddress': 'Private Address',
    'RedeemFromPrivateForm.Required': 'Please select at least one private address',

    'Rename.name': 'Name is incorrect',
    'Rename.edit': 'Edit',

    'SendNormalTrans.hasBalance': 'Please make sure you have sufficient balance',
    'SendNormalTrans.hasNoBalance': 'Please make sure you have sufficient balance:',
    'SendNormalTrans.hasNoWANBalance': 'Please make sure you have sufficient WAN balance',
    'SendNormalTrans.hasNoTokenBalance': 'Please make sure you have sufficient token balance',
    'SendNormalTrans.hasNoETHBalance': 'Please make sure you have sufficient ETH balance',
    'SendNormalTrans.hasNoBNBBalance': 'Please make sure you have sufficient BNB balance',
    'SendNormalTrans.smgUnavailable': 'Storeman group unavailable',

    'TransHistory.time': 'TIME',
    'TransHistory.from': 'FROM',
    'TransHistory.to': 'TO',
    'TransHistory.value': 'AMOUNT',
    'TransHistory.status': 'STATUS',
    'TransHistory.success': 'Success',
    'TransHistory.failed': 'Failed',
    'TransHistory.pending': 'Pending',
    'TransHistory.transactionHistory': 'Transaction History',
    'TransHistory.selectAFromAddress': 'Select an account name',
    'TransHistory.all': 'All',
    'TransHistory.private': 'Private',
    'TransHistory.refund': 'Redeem',
    'TransHistory.allTooltip': 'Show all transactions, including normal and private transactions',
    'TransHistory.privateTooltip': 'Show private transactions',

    'PrivateTransHistory.type': 'TYPE',

    'CrossChainTransHistory.ApproveSending': 'Sending Approval Request',
    'CrossChainTransHistory.ApproveSendFail': 'Resending Approval Request',
    'CrossChainTransHistory.ApproveSendFailAfterRetries': 'Approval Request Failed',
    'CrossChainTransHistory.ApproveSent': 'Approval Request Sent',
    'CrossChainTransHistory.Approved': 'Approved',
    'CrossChainTransHistory.LockSending': 'Sending Lock Request',
    'CrossChainTransHistory.LockSendFail': 'Resending Lock Request',
    'CrossChainTransHistory.LockFail': 'Lock Request Failed',
    'CrossChainTransHistory.LockSendFailAfterRetries': 'Lock Request Failed',
    'CrossChainTransHistory.LockSent': 'Lock Request Sent',
    'CrossChainTransHistory.Locked': 'Locked',
    'CrossChainTransHistory.BuddyLocked': 'Locked By Storeman',
    'CrossChainTransHistory.RedeemSending': 'Sending Redemption Request',
    'CrossChainTransHistory.RedeemSendFail': 'Resending Redemption Request',
    'CrossChainTransHistory.RedeemSendFailAfterRetries': 'Redemption Request Failed',
    'CrossChainTransHistory.RedeemSent': 'Redemption Request Sent',
    'CrossChainTransHistory.Redeemed': 'Redeemed',
    'CrossChainTransHistory.RedeemFail': 'Redemption Request Failed',
    'CrossChainTransHistory.RevokeSending': 'Sending Revocation Request',
    'CrossChainTransHistory.RevokeSendFail': 'Resending Revocation Request',
    'CrossChainTransHistory.RevokeSendFailAfterRetries': 'Revocation Request Failed',
    'CrossChainTransHistory.RevokeSent': 'Revocation Request Sent',
    'CrossChainTransHistory.Revoked': 'Revoked',
    'CrossChainTransHistory.redeemFinished': 'Redemption Finished',
    'CrossChainTransHistory.sentHashConfirming': 'Confirming Transaction',
    'CrossChainTransHistory.waitingCross': 'Waiting For Lock Request',
    'CrossChainTransHistory.Cancelled': 'Cancelled',
    'CrossChainTransHistory.StoremanLocked': 'Storeman Locked',
    'CrossChainTransHistory.Success': 'Success',
    'CrossChainTransHistory.Failed': 'Failed',

    'menuConfig.portfolio': 'Portfolio',
    'menuConfig.wallet': 'Wallet',
    'menuConfig.hardwareWallet': 'Hardware Wallet',
    'menuConfig.ledger': 'Ledger',
    'menuConfig.trezor': 'Trezor',
    'menuConfig.offline': 'Offline Wallet',
    'menuConfig.galaxyPos': 'Galaxy PoS',
    'menuConfig.delegation': 'Delegation',
    'menuConfig.validator': 'Validator',
    'menuConfig.staking': 'Staking',
    'menuConfig.settings': 'Settings',
    'menuConfig.thirdPartyDapps': '√êApp Store',
    'menuConfig.dex': 'DEX',

    'dAppConfirm.sign': 'Do you allow this DApp to sign with your wallet?',
    'dAppConfirm.send': 'Do you allow this DApp to sendTransaction with your wallet?',
    'dAppConfirm.warn': 'This operation may cause changes to the assets in your wallet.',

    'utils.helper.getBalanceFailed': 'Failed to get balance',
    'utils.helper.getNonceFailed': 'Failed to get nonce',
    'utils.helper.getGasPriceFailed': 'Failed to get gas price',
    'utils.helper.estimateGasFailed': 'Failed to estimate gas',
    'utils.helper.checkWanAddressFailed': 'Failed to check WAN address',
    'utils.helper.getChainIdFailed': 'Failed to get chain ID',
    'utils.helper.getSdkStatusFailed': 'Failed to get SDK status',

    'staking.dashboard': 'Dashboard',
    'staking.title': 'Delegation',
    'staking.newDelegate': 'New Delegation',
    'staking.myStake': 'My Stake',
    'staking.pending': 'Pending Withdrawal',
    'staking.rewardRate': 'Avg Network Reward',
    'staking.totalReward': 'My Reward',
    'staking.table.myAccount': 'ACCOUNT',
    'staking.table.myStake': 'STAKE',
    'staking.table.validator': 'VALIDATOR',
    'staking.table.distributedReward': 'REWARD',
    'staking.table.modifyStake': 'ACTION',
    'staking.table.topup': 'Top-up',
    'staking.table.exit': 'Exit',
    'staking.table.claim': 'Claim',
    'staking.table.modify': 'Modify',
    'staking.table.type': 'TYPE',
    'staking.delegateHistory': 'Delegation History',
    'staking.delegateList': 'Delegation List',
    'staking.unclaimAmount': 'Claimable Amount',

    'validator.title': 'Validator',

    'StakeInForm.title': 'Delegate Now',
    'StakeInForm.validatorAccount': 'Validator\'s Account:',
    'StakeInForm.myAccount': 'My Account:',
    'StakeInForm.name': 'Name',
    'StakeInForm.address': 'Address',
    'StakeInForm.password': 'Password',
    'StakeInForm.quota': 'Quota',
    'StakeInForm.commission': 'Fee (%)',

    'StakeInForm.stake': 'Amount',
    'StakeInForm.stakeTooLow': 'Minimum amount should be 100 WAN',
    'StakeInForm.stakeExceed': 'Stake amount exceeds validator\'s quota',
    'StakeInForm.balance': 'Balance',
    'StakeInForm.more': 'More Info',
    'StakeInForm.selectName': 'Select a validator',
    'StakeInForm.enterAddress': 'Please enter address',
    'StakeInForm.selectAddress': 'Select a FROM address',
    'StakeInForm.delegateInFailed': 'Delegate in transaction failed',
    'StakeInForm.networkDisconnected': 'Network disconnected',
    'WithdrawForm.title': 'Register to Withdraw',
    'WithdrawForm.note': 'Note: After registering for withdrawal, staking balance will go to zero and staked WAN will be returned to your account within 3 epochs.',
    'staking.fromDaysAgo1': ' ',
    'staking.fromDaysAgo2': ' days ago',
    'staking.fromEpochs1': 'from ',
    'staking.fromEpochs2': ' epochs',
    'staking.inValidators1': 'In ',
    'staking.inValidators2': ' validator',
    'staking.startFrom1': 'From ',
    'staking.startFrom2': ' ',
    'staking.delegations': ' delegation',
    'TransHistory.delegatein': 'Delegate In',
    'TransHistory.delegateout': 'Delegate Out',
    'Config.staking': 'Galaxy PoS Options',
    'Config.enableValidator': 'Enable Validator',
    'Config.stakingAdvance': 'Show validator in the sidebar',

    'Config.others': 'Other Options',
    'Config.enableOfflineWallet': 'Enable Offline Wallet',
    'Config.offlineWallet': 'Show offline wallet in the sidebar',
    'Config.enableScanOTA': 'Enable Scan OTA',
    'Config.scanOTA': 'Scan OTA Address',
    'Config.wanPath': 'Wanchain Address Path',

    'staking.validatorRegister': 'Validator Register',
    'staking.validatorUpdate': 'Validator Update',

    'DelegateOut.delegateOutSuccessfully': 'Delegate out transaction successful',
    'DelegateOut.delegateOutFailed': 'Delegate out failed',

    'ValidatorUpdate.note': 'Note: You should select the account that the validator registration transaction was sent from.',
    'ValidatorUpdate.invalidValue': 'Invalid Value. Must > 14 or == 0',
    'ValidatorNode.nodeList': 'Validator List',
    'ValidatorNode.registerValidatorNode': 'Register',
    'ValidatorNode.table.myAccount': 'ACCOUNT',
    'ValidatorNode.table.principal': 'MY STAKE',
    'ValidatorNode.table.entrustment': 'DELEGATION STAKE',
    'ValidatorNode.table.validator': 'VALIDATOR',
    'ValidatorNode.table.distributedReward': 'REWARD',
    'ValidatorNode.table.modifyStake': 'ACTION',
    'ValidatorNode.table.topup': 'Top-up',
    'ValidatorNode.table.exit': 'Exit',
    'ValidatorNode.table.type': 'TYPE',
    'ValidatorNode.table.validatorNum': 'validators',

    'ValidatorRegister.myPrincipal': 'My Stake',
    'ValidatorRegister.myEntrusted': 'Delegation Stake',
    'ValidatorRegister.topup': 'Validator Top-up',
    'ValidatorRegister.warning': 'Warning: Validators which accept delegation should have at least 50,000 WAN stake',
    'ValidatorRegister.verifyModification': 'Validator Modification',
    'ValidatorRegister.exit': 'Validator Exit',
    'ValidatorRegister.verifyRegistration': 'Validator Registration',
    'ValidatorRegister.validatorAccount': 'Validator Account',
    'ValidatorRegister.publicKey1': 'Public Key 1',
    'ValidatorRegister.enterSecPk': 'Enter public key 1',
    'ValidatorRegister.publicKey2': 'Public Key 2',
    'ValidatorRegister.enterG1Pk': 'Enter public key 2',
    'ValidatorRegister.publicKeyIsWrong': 'Invalid public key',
    'ValidatorRegister.lockTime': 'Lock Period',
    'ValidatorRegister.currentLockTime': 'Current Lock Period',
    'ValidatorRegister.nextLockTime': 'Next Lock Period',
    'ValidatorRegister.agency': 'Accept Delegation',
    'ValidatorRegister.acceptAgency': 'Yes',
    'ValidatorRegister.notAcceptAgency': 'No',
    'ValidatorRegister.feeRate': 'Delegation Fee (%)',
    'ValidatorRegister.currentFeeRate': 'Current Fee',
    'ValidatorRegister.maxFeeRate': 'Max Fee (%)',
    'ValidatorRegister.feeRateLimit': 'Up to two decimal places',
    'ValidatorRegister.myAccount': 'My Account',
    'ValidatorRegister.address': 'Address',
    'ValidatorRegister.balance': 'Balance',
    'ValidatorRegister.stakeTooLow': 'Minimum amount should be 10000 WAN',
    'ValidatorRegister.historyTitle': 'Validator History',
    'TransHistory.Storeman-delegateIncentiveClaim': 'Delegate Claim',
    'TransHistory.Storeman-delegateOut': 'Delegate Out',
    'TransHistory.Storeman-delegateIn': 'Delegate In',
    'TransHistory.Storeman-stakeClaim': 'Stake Claim',
    'TransHistory.Storeman-stakeOut': 'Stake Out',
    'TransHistory.Storeman-delegateClaim': 'Delegate Claim',
    'TransHistory.Storeman-stakeIncentiveClaim': 'Stake Claim',
    'TransHistory.Storeman-stakeAppend': 'Stake Append',
    'TransHistory.Storeman-stakeIn': 'Stake In',
    'TransHistory.StakeIn': 'Stake In',
    'TransHistory.StakeRegister': 'Stake In',
    'TransHistory.StakeUpdate': 'Lock Period Update',
    'TransHistory.StakeAppend': 'Stake Append',
    'TransHistory.StakeUpdateFeeRate': 'Fee Rate Update',
    'ValidatorRegister.modifyTypeTitle': 'Modified Parameter',
    'ValidatorRegister.invalidType': 'Invalid parameter',
    'ValidatorRegister.selectType': 'Select a parameter',
    'ValidatorRegister.modifyFeeRateWarning': 'Only one modification is allowed per day',
    'ValidatorRegister.registerFailed': 'Register failed',
    'ValidatorRegister.topUpFailed': 'Top up failed',
    'ValidatorRegister.updateFailed': 'Update failed',

    'Offline.stepOne': 'Step 1',
    'Offline.stepOneText': 'Generate Information',
    'Offline.inputAddr': 'Input Sender Address',
    'Offline.getInfo': 'Generate',
    'Offline.stepTwo': 'Step 2',
    'Offline.stepTwoText': 'Generate the signed transaction by another offline wallet on an offline computer',
    'Offline.stepThree': 'Step 3',
    'Offline.stepThreeText': 'Send Signed Transaction',
    'Offline.threeInfo': 'Paste the signed transaction from step 2 here and press the "SEND" button',
    'Offline.threeTitle': 'Input Signed Transaction',
    'Offline.sendTrans': 'Send Transaction',
    'Offline.getInfoFailed': 'Failed to get information. Please try again',
    'Offline.sendRawTx': 'Failed to send transaction. Please try again',
    'Offline.inputRawTxText': 'Please input signed transaction',
    'Offline.linkToWebsite': 'Download the offline wallet',

    'popup.search': 'Search',
    'title.imported': 'Imported Address',
    'title.importedKey': 'Imported Key',

    'network.down': 'The network request failed, Please try again later',

    'Storeman.selecting': 'Selecting',
    'Storeman.selected': 'Selected',
    'Storeman.unselected': 'Not Selected',
    'Storeman.ready': 'Ready',
    'Storeman.working': 'Working',
    'Storeman.failed': 'Failed',
    'Storeman.quitting': 'Quitting',
    'Storeman.quitted': 'Quitted',
    'Storeman.stake': 'STAKE',
    'Storeman.storeman': 'STOREMAN',
    'Storeman.storemanAccount': 'Storeman Account',
    'Storeman.selectStoremanAccount': 'Select Storeman Account',
    'Storeman.crosschain': 'CROSS CHAIN',
    'Storeman.selectCrosschain': 'Select Cross Chain',
    'Storeman.reward': 'REWARD',
    'Storeman.claimable': 'CLAIMABLE AMOUNT',
    'Storeman.openGroupList': 'Open Group List',
    'Storeman.storemanList': 'Storeman List',
    'Storeman.group': 'Group',
    'Storeman.groupUpper': 'GROUP',
    'Storeman.currgroup': 'CURRENT GROUP',
    'Storeman.nextGroup': 'NEXT GROUP',
    'Storeman.startTime': 'START TIME',
    'Storeman.endTime': 'END TIME',
    'Storeman.delegateFee': 'DELEGATION FEE',
    'Storeman.rank': 'RANK',
    'Storeman.slash': 'SLASH',
    'Storeman.enterPublicKey': 'Enter Public Key',
    'Storeman.enterEnodeID': 'Enter Enode ID',
    'Storeman.repeatedPK': 'Repeated Public Key, Please use a new one',
    'Storeman.delegationClaim': 'Delegation Claim',
    'Storeman.delegationExit': 'Delegation Exit',
    'Storeman.delegationTopup': 'Delegation Top-up',
    'Storeman.registration': 'Storeman Registration',

    'MoreAccount.inputSearchText': 'Input search text',

    'Storeman.delegationWarning': 'Notice:  Click "exit" any time before the end of current Storeman cycle to withdraw your WAN back to your wallet at cycle end time.'
}

export default en_US;
